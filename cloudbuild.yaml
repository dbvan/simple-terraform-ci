steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      export TF_LOG=DEBUG
      terraform init || exit 1

# [START tf-validate]
- id: 'tf validate'
  name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      terraform validate -no-color

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      apk add jq
      alias convert_report="jq -r '([.resource_changes[].change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
      terraform plan -out '${BRANCH_NAME}.tfplan'
      terraform show --json '${BRANCH_NAME}.tfplan' | convert_report > '${BRANCH_NAME}-PLAN.json'     
# [END tf-plan]

# [Start tf-drift]
- id: 'tf drift'
  name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      terraform plan -detailed-exitcode -out="${BRANCH_NAME}-PLAN.tfplan" 2> /dev/null || ec=$?
      case $ec in
      0) echo "No Changes Found"; exit 0;;
      1) printf '%s\n' "Command exited with non-zero"; exit 1;;
      2) echo "Changes Found, opening Issue"; 
          echo \`\`\`diff > "${BRANCH_NAME}-PLAN.json"; 
          terraform show -no-color ${BRANCH_NAME}-PLAN.tfplan | tee -a "${BRANCH_NAME}-PLAN.json"; 
          echo \`\`\` >> "${BRANCH_NAME}-PLAN.json"; 
          sed -i -e 's/  +/+/g' "${BRANCH_NAME}-PLAN.json"; 
          sed -i -e 's/  ~/~/g' "${BRANCH_NAME}-PLAN.json"; 
          sed -i -e 's/  -/-/g' "${BRANCH_NAME}-PLAN.json"; 
          MESSAGE=$(cat "${BRANCH_NAME}-PLAN.json"); 
          ;;
      esac
      
#[End tf-Dritf]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ "${BRANCH_NAME}" = "dev" ] || [ "${BRANCH_NAME}" = "master" ]; then
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
        echo "*******************************************************************************"
      fi
# [END tf-apply]
